<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta http-equiv="Content-Language" content="pt-br">
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="76x76" href="../assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="../assets/img/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>Hidro Monitor</title>
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no'
        name='viewport' />
    <!--     Fonts and icons     -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700,200" rel="stylesheet" />
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" rel="stylesheet" />
    <!-- CSS Files -->
    <link href="../assets/css/bootstrap.min.css" rel="stylesheet" />
    <link href="../assets/css/light-bootstrap-dashboard.css?v=2.0.0 " rel="stylesheet" />
    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link href="../assets/css/demo.css" rel="stylesheet" />

    <!--CHARTJS CSS-->
    <link rel="stylesheet" type="text/css" href="../../plugins/charts/chartjs/css/style_chartjs.css">


    <!--CHARTJSREALTIME-->
    <style>
        .gauge {
            display: inline-block;
            margin: 0 auto;
            border: 1px solid #ddd;
            box-sizing: border-box;


        }

        .size-1 {
            width: 20%;
        }

        .size-2 {
            width: 30%;
        }

        .size-3 {
            width: 48%;
        }

        .size-100 {
            width: 100%;
            height: 240px;
        }

        .justify-content-center {
            justify-content: center !important
        }

        .chart_boxx {
            width: 350px;
            margin: 0 auto;
        }
    </style>

    <!--APEX CHART-->
    <style>
        #apenChart,
        .chart-box {
            padding-top: 20px;
            padding-left: 10px;
            margin-left: 10px;
            margin-right: 10px;
            background: #fff;
            border: 1px solid #ddd;
            box-shadow: 0 22px 35px -16px rgba(0, 0, 0, 0.1);
        }

        select.flat-select {
            -moz-appearance: none;
            -webkit-appearance: none;
            appearance: none;
            background: #ec0000 url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\' width=\'60px\' height=\'60px\'><polyline fill=\'white\' points=\'46.139,15.518 25.166,36.49 4.193,15.519\'/></svg>") no-repeat scroll right 2px top 9px / 16px 16px;
            border: 0 none;
            border-radius: 3px;
            color: #fff;
            font-family: arial, tahoma;
            font-size: 16px;
            font-weight: bold;
            outline: 0 none;
            height: 33px;
            padding: 5px 20px 5px 10px;
            text-align: center;
            text-indent: 0.01px;
            text-overflow: "";
            text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
            transition: all 0.3s ease 0s;
            width: auto;
            -webkit-transition: 0.3s ease all;
            -moz-transition: 0.3s ease all;
            -ms-transition: 0.3s ease all;
            -o-transition: 0.3s ease all;
            transition: 0.3s ease all;
        }

        select.flat-select:focus,
        select.flat-select:hover {
            border: 0;
            outline: 0;
        }


        .apexcharts-canvas {
            margin: 0 auto;
        }
    </style>

</head>

<body class="">
    <div class="wrapper">
        <div class="sidebar" data-image="../assets/img/4.png" data-color="light-blue">
            <!--Tip 1: You can change the color of the sidebar using: data-color="purple | blue | green | orange | red"  Tip 2: you can also add an image using data-image tag-->
            <div class="sidebar-wrapper">
                <div class="logo">
                    <a href="monitoramento" class="simple-text">
                        Hidro Monitor
                    </a>
                </div>
                <ul class="nav">
                    <li class="nav-item active">
                        <a class="nav-link" href="/menu/monitoramento">
                            <i class="nc-icon nc-tv-2"></i>
                            <p>Monitoramento</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/menu/dados">
                            <i class="nc-icon nc-chart-bar-32"></i>
                            <p>Dados</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/menu/controles">
                            <i class="nc-icon nc-settings-gear-64"></i>
                            <p>Controles</p>
                        </a>
                    </li>

                    <hr style="border: 0; border-top: 1px solid #fff;">
                    <li class="nav-item">
                        <a class="nav-link" href="/desconectar">
                            <i class="nc-icon nc-button-power"></i>
                            <p>Desconectar</p>

                        </a>
                    </li>
                    <hr style="border: 0; border-top: 1px solid #fff;">


                    <li class="nav-item active active-pro">
                        <a class="nav-link active"
                            href="mailto:eng.victoreustaquio@gmail.com?subject=Suporte HidroMonitor&body=Bem-vindo ao suporte! %0AInforme os seguintes dados...%0A%0ANome Completo:%0ANúmero para contato:%0A%0A%0ADescreva seu problema aqui:%0ASugestões:%0AElogios:%0A%0A%0A%0A">
                            <i class="nc-icon nc-email-83"></i>
                            <p>E-MAIL DE SUPORTE</p>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <!-- MAIN PANEL -->
        <div class="main-panel">
            <!-- Navbar -->
            <nav class="navbar navbar-expand-lg " color-on-scroll="500">
                <div class="container-fluid">
                    <div class="navbar-wrapper">
                        <a class="navbar-brand" href="/menu/monitoramento"> Dashboard: Monitoramento</a>
                    </div>
                    <button href="navbar-toggler" class="navbar-toggler navbar-toggler-right" type="button"
                        data-toggle="collapse" aria-controls="navigation-index" aria-expanded="false"
                        aria-label="Toggle navigation">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="navbar-toggler-bar burger-lines"></span>
                        <span class="navbar-toggler-bar burger-lines"></span>
                        <span class="navbar-toggler-bar burger-lines"></span>
                    </button>
                    <div class="collapse navbar-collapse justify-content-end" id="navigation">
                        <ul class="navbar-nav ml-auto">
                            <li class="nav-item">
                                <center><i class="nc-icon nc-circle-09"></i></center>

                                <a class="" style="text-align: center;">

                                    <h5 style="text-transform: uppercase;">{{ nome }}</h5>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
            <!-- End Navbar -->
            <div class="content">
                <div class="container-fluid card-center-vk">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="card  card-tasks">
                                <div class="card-header ">
                                    <h4 class="card-title">Consumo Instantâneo</h4>
                                    <p class="card-category"> Litros por minuto</p>
                                    <hr>
                                </div>
                                <div class="card-body">
                                    <div id="apenChart"></div>
                                    <br>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <!-- CARD GAUGER FLUXO LITROS MINUTO -->
                        <div class="col-lg-6 col-md-12 col-sm-12">
                            <div class="card  card-tasks">
                                <div class="card-header ">
                                    <h4 class="card-title">Real-Time</h4>
                                    <p class="card-category"></p>
                                    <hr>
                                </div>
                                <div class="card-body">
                                    <center>
                                        <div class="chart_box">
                                            <div id="fluxo_id" style="width: 350px; height: 250px; margin-left: -30px;">
                                            </div>
                                        </div>
                                    </center>
                                </div>
                                <div class="card-footer">
                                </div>
                            </div>
                        </div>
                        <!-- CARD GAUGER FLUXO LITROS CONSUMIDO -->
                        <div class="col-lg-6 col-md-12 col-sm-12">
                            <div class="card card-tasks">
                                <div class="card-header ">
                                    <h4 class="card-title">Consumo diário</h4>
                                    <p class="card-category"></p>
                                    <hr>
                                </div>
                                <div class="card-body">
                                    <center>
                                        <div class="chart_box">
                                            <div id="consumo_id"
                                                style="width: 350px; height: 250px; margin-left: -30px;">
                                            </div>
                                        </div>
                                    </center>
                                    <hr>
                                    <div class="row justify-content-center">
                                        <h4
                                            style="color: white; margin-top: 0px; margin-bottom: 6px; font-size: 14px; color: gray">
                                            Dispositivo
                                        </h4>
                                    </div>
                                    <div class="row justify-content-center">
                                        <select id="select-device" name="dispositivo" class="classic"
                                            onchange="loadConsumoDiario()">
                                            {{#each dispositivos as | dispositivo |}}
                                            <option value="{{dispositivo.macId}}">{{dispositivo.nome}}</option>
                                            {{/each}}
                                        </select>
                                    </div>
                                </div>
                                <div class="card-footer">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {{> footer}}
        </div>
    </div>



    <!--   Core JS Files   -->
    <script src="../javascript/core/jquery.3.2.1.min.js" type="text/javascript"></script>
    <script src="../javascript/core/popper.min.js" type="text/javascript"></script>
    <script src="../javascript/core/bootstrap.min.js" type="text/javascript"></script>
    <!--  Plugin for Switches, full documentation here: http://www.jque.re/plugins/version3/bootstrap.switch/ -->
    <script src="../plugins/bootstrap-switch.js"></script>
    <!--  Chartist Plugin  -->
    <script src="../plugins/chartist.js"></script>
    <!--  Notifications Plugin    -->
    <!-- Control Center for Light Bootstrap Dashboard: scripts for the example pages etc -->
    <script src="../javascript/light-bootstrap-dashboard.js" type="text/javascript"></script>
    <!-- Light Bootstrap Dashboard DEMO methods, don't include it in your project! -->



    <!--CHARTJS JS-->
    <script src="../plugins/charts/chartjs/2.9.3/Chart.min.js"></script>
    <script src="../plugins/charts/chartjs/utils.js"></script>


    <!--CHARTJS REALTIME-->
    <script src='../plugins/charts/chart_raphael/raphael.2.1.0.min.js'></script>
    <script src='../plugins/charts/chart_justgage/justgage.1.0.1.min.js'></script>


    <!--APEX REALTIME-->
    <script src='../plugins/charts/chart_apex/apexcharts.min.js'></script>


    <!--<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script> -->
    <!-- <script src="//cdn.jsdelivr.net/socket.io-client/1.3.2/socket.io.js"> </script> -->
    <!--<script src="https://code.jquery.com/jquery-1.11.1.js"></script> -->
    {{!--
    <script src="../plugins/socket.io/4.5.0/socket.io.min.js"></script> --}}
    <script src="../plugins/socket.io/2.3.0/socket.io.js"></script>

    <script>
        var localDispositivosData = {{{ json dispositivos }}}
        const firstDeviceId = localDispositivosData ? localDispositivosData[0].id : null
    </script>

    <script>

        function refreshChartData(chart, content) {
            chart.refresh(content || 0)
        }
    </script>

    <script>

        const userDevices = {{{ json dispositivos }}}

        function debounce(func, timeout = 2000) {
            let timer;
            return (...args) => {
                clearTimeout(timer);
                timer = setTimeout(() => { func.apply(this, args); }, timeout);
            };
        }

        function gaugeNoData() {
            refreshChartData(fluxoGauge, 0)
            DeviceData.fluxo = 0
        }
        const refreshIfNoData = debounce(() => gaugeNoData());

    </script>


    <script>

        var DeviceData = { fluxo: "0" };

        const setChartOffline = () => {
            refreshChartData(fluxoGauge, "Offline");
        }
        const setChartOnline = () => {
            refreshChartData(fluxoGauge, 0)
        }

        //CONEXÃO SOCKET
        const socket = io.connect({
            autoConnect: true,
            reconnection: false,
        });

        const tryReconnect = () => {
            console.clear()
            console.log("socket offline")
            setTimeout(() => {
                socket.io.open((err) => {
                    if (err) {
                        tryReconnect();
                    }
                    if (!err) {
                        console.clear()
                        console.log("socket connected")
                        setChartOnline()
                    }
                });
            }, 5000);
        }

        socket.io.on("close", () => {
            tryReconnect();
            setChartOffline();
        });
        socket.on('disconnect', () => console.log("socket disconnect"));


        userDevices.forEach(device => {
            const { macId } = device

            const formattedMac = macId.replace(/-/g, '').replace(/:/g, '');

            socket.on(`${formattedMac}`, function (data) {
                DeviceData = data;

                const newData = DeviceData?.fluxo || 0
                refreshChartData(fluxoGauge, newData)

                refreshIfNoData();
            });
        })






    </script>


    <script type="text/javascript">
        //-------------------CONSTRUÇÂO DOS CHARTS-----------------------------
        var fluxoGauge = new JustGage({
            id: "fluxo_id",
            value: "Carregando...",
            min: 0,
            max: 30,
            gaugeWidthScale: 0.8,
            counter: true,
            relativeGaugeSize: true,
            title: "Fluxo",
            label: "Litros por minuto",
            levelColorsGradient: true,
            levelColors: ["ADD8E6", "87CEEB", "87CEFA", "00BFFF", "1E90FF", "4169E1"],
            shadowSize: 2,
            shadowVerticalOffset: 12
        });

        setTimeout(() => refreshChartData(fluxoGauge, 0), 500)

        var litrosConsumidos = 0;

        var consumoGauge = new JustGage({
            id: "consumo_id",
            value: litrosConsumidos,
            min: 0,
            max: litrosConsumidos * 5,
            gaugeWidthScale: 0.8,
            counter: true,
            relativeGaugeSize: true,
            title: "Litros",
            label: "Litros consumidos hoje",
            levelColorsGradient: true,
            levelColors: ["ADD8E6", "87CEEB", "87CEFA", "00BFFF", "1E90FF", "4169E1"],
            shadowSize: 2,
            shadowVerticalOffset: 12
        });

    </script>

    <!-- APEX CHART REALTIME -->
    <script>
        var lastDate = 0;
        var data = [];
        var TICKINTERVAL = 1000;  //Amostragens
        let XAXISRANGE = 10000;

        //Inicializa o gráfico com o valor zerado até o count ser superado count = 10
        function getDayWiseTimeSeries(baseval, count, yrange) {
            var i = 0;
            while (i < count) {
                var x = baseval;
                var y = 0;
                data.push({ x, y });
                lastDate = baseval
                baseval += TICKINTERVAL;
                i++;
            }
        }

        // data e hora atual a região
        let datav = new Date();
        // Fri Nov 16 2018 18:36:40 GMT-0300 (Horário de Verão de Brasília)
        let tempoDeInicializacao = 7500; //Correção devido a demora da inicialização do Chart
        let data2v = new Date(datav.valueOf() - datav.getTimezoneOffset() * 60000 - tempoDeInicializacao);
        console.log("datav: ", datav)
        console.log("data2v: ", data2v)

        getDayWiseTimeSeries(data2v.getTime(), 10, {})

        function getNewSeries(baseval, yrange) {
            var newDate = baseval + TICKINTERVAL;
            lastDate = newDate;

            for (var i = 0; i < data.length - 1000; i++) {
                // IMPORTANTE
                // Apagar os dados de x e y que estão fora da area renderizada (Dados não visiveis)
                // Evitando estouro de memória no dispositivo
                data[i].x = newDate - XAXISRANGE - TICKINTERVAL;
                data[i].y = 0;
            }

            data.push({
                x: newDate,
                y: DeviceData?.fluxo || 0
            })
        }

        function resetData() {
            // opcionalmente, podemos resetar os dados para nao mantermos series muito grandes de informações
            data = data.slice(data.length - 10, data.length);
        }
    </script>



    <script>
        var options = {
            series: [{
                data: data.slice()
            }],
            chart: {
                id: 'realtime',
                height: 350,
                type: 'line',
                animations: {
                    enabled: true,
                    easing: 'linear',
                    dynamicAnimation: {
                        speed: 1000
                    }
                },
                toolbar: {
                    show: false
                },
                zoom: {
                    enabled: false
                }
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                show: true,
                curve: 'smooth',
                lineCap: 'round',
                //colors: undefined,
                width: 3,
                dashArray: 0,
            },
            title: {
                text: '',
                align: 'left'
            },
            markers: {
                size: 0
            },
            xaxis: {
                type: 'datetime',
                range: XAXISRANGE,
            },
            yaxis: {
                max: 30
            },
            legend: {
                show: false
            },
        };

        var apenChart = new ApexCharts(document.querySelector("#apenChart"), options);

        apenChart.render();

        window.setInterval(function () {
            getNewSeries(lastDate, {
                min: 0,
                max: 10
            });
            apenChart.updateSeries([{
                data: data
            }]);
        }, 1000)

    </script>

    <script>




        function loadConsumoDiario() {
            const selectedMacId = $('#select-device').val()
            const dispositivoData = localDispositivosData?.find(dispositivo => dispositivo.macId === selectedMacId)
            const date = new Date().toISOString().split('T')[0];

            console.log("loadConsumoDiario ", selectedMacId, date)

            const payload = {
                date,
                endDate: data?.slice(13, 24) || null,
                groupBy: selectedGroup
            }

            $.ajax({
                url: "/dados/consumo-diario",
                type: "post",
                data: {
                    deviceId: dispositivoData.macId || firstDeviceId,
                    ...payload
                }
            }).done(function (response) {
                const { consumo_diario_total } = response
                refreshChartData(consumoGauge, consumo_diario_total)
            });
        }

        //Atualiza o consumo diário a cada 1 minuto
        setInterval(() => {
            loadConsumoDiario()
        }, 60000)


    </script>


</body>

</html>